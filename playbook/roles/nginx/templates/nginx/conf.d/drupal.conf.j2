################################################################################
# This file is provisioned automatically - you have been warned :)
################################################################################

location / {

  ## Handle D7 image styles
  location ~* /files/styles/ {
    expires 30d;
    try_files $uri @drupal;
  }

  ## Handle D6 imagecache
  location ~* /imagecache/ {
    expires 30d;
    try_files $uri @drupal;
  }

  ## Advanced Help module makes each module provided README available.
  location ^~ /help/ {
    location ~* ^/help/[^/]*/README\.txt$ {
      try_files $uri @drupal;
    }
  }

  ## Regular private file serving (i.e. handled by Drupal).
  location ^~ /system/files/ {
    try_files $uri @drupal;
    log_not_found off;
  }

  ## Allow download of .txt files from files directory
  location ~* ^/sites/.*/files/(?:.+\.(?:txt)) {
    tcp_nodelay     off;
    expires         30d;
    try_files $uri =404;
    log_not_found off;
  }

  ## Replicate the Apache <FilesMatch> directive of Drupal standard
  ## .htaccess. Disable access to any code files. Return a 404 to curtail
  ## information disclosure. Hide also the text files.
  location ~* ^(?:.+\.(?:htaccess|make|txt|engine|inc|info|module|profile|po|sh|.*sql|test|theme|tpl(?:\.php)?|xtmpl)|code-style\.pl|/Entries.*|/Repository|/Root|/Tag|/Template)$ {
    return 404;
  }

  ## Serve static files & images directly, without all standard drupal rewrites, php-fpm etc.
  location ~* ^.+\.(?:css|js|jpe?g|gif|png|ico|swf|docx?|xlsx?|tiff?|txt|cgi|bat|pl|dll|aspx?|exe|class)$ {
    tcp_nodelay     off;
    expires         30d;
    add_header Cache-Control "public";
    ## Set the OS file cache.
    open_file_cache max=10000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    try_files $uri =404;
    log_not_found off;
    access_log off;
  }

  ###
  ### Advagg_css and Advagg_js support.
  ###
  location ~* files/advagg_(?:css|js)/ {
    expires       max;
    etag          off;
    access_log    off;
    log_not_found off;
    ## Set the OS file cache.
    open_file_cache max=3000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    add_header Cache-Control "no-transform, public";
    add_header Last-Modified "Wed, 20 Jan 1988 04:20:42 GMT";
    add_header Access-Control-Allow-Origin *;
    add_header X-Header "AdvAgg Generator 2.0 CDN";
    try_files $uri @redirect;
  }

  ## PDFs and powerpoint files handling.
  location ~* ^.+\.(?:pdf|pptx?)$ {
    expires 30d;
    ## No need to bleed constant updates. Send the all shebang in one
    ## fell swoop.
    tcp_nodelay off;
  }

  # Configure webfont access
  location ~* \.(?:ttf|ttc|otf|eot|woff|font.css)$ {
    # Uncomment to allow cross domain webfont access
    #add_header "Access-Control-Allow-Origin" "*";

    # Set cache rules for webfonts.
    expires 30d;
    add_header Cache-Control "public";
    ## Set the OS file cache.
    open_file_cache max=10000 inactive=120s;
    open_file_cache_valid 45s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    try_files $uri =404;
    log_not_found off;
    access_log off;
  }

  ## Serve bigger media/static/archive files directly, without all standard drupal rewrites, php-fpm etc.
  location ~* ^.+\.(?:avi|mpe?g|mov|wmv|mp3|mp4|m4a|ogg|flv|wav|midi|zip|tar|t?gz|rar)$ {
    expires         30d;
    tcp_nodelay     off;
    try_files $uri =404;
    log_not_found off;
    access_log off;
  }

  ## Deny bots on never cached uri without 403 response.
  location ~* ^/(?:user|admin|cart|checkout|logout|abuse|flag) {
    if ( $http_user_agent ~* (?:crawl|goog|yahoo|spider|bot|yandex|bing|tracker|click|parser) ) {
      return 444;
    }
    try_files $uri @drupal;
  }

  location = /robots.txt {
    access_log off;
    try_files $uri @drupal;
  }

  location = /radioactivity_node.php {
    try_files $uri @drupal;
  }

  # This is cool because no php is touched for static content
  try_files $uri @drupal;

}

location = /authorize.php {
  include conf.d/fastcgi_drupal.conf;
  fastcgi_param  SCRIPT_FILENAME    $document_root/authorize.php;
  fastcgi_pass phpcgi;
}

## Run the update from the web interface with Drupal 7.
location = /update.php {
  include conf.d/fastcgi_drupal.conf;
  fastcgi_param  SCRIPT_FILENAME    $document_root/update.php;
  fastcgi_pass phpcgi;
}

## Run the install from the web interface with Drupal 7.
location = /install.php {
  include conf.d/fastcgi_drupal.conf;
  fastcgi_param  SCRIPT_FILENAME    $document_root/install.php;
  fastcgi_pass phpcgi;
}

## Run the install from the web interface with Drupal 8.
location = /core/install.php {
  include conf.d/fastcgi_drupal.conf;
  fastcgi_param  SCRIPT_FILENAME    $document_root/core/install.php;
  fastcgi_pass phpcgi;
}

## Allow running _ping.php
location = /_ping.php {
  include conf.d/fastcgi_drupal.conf;
  fastcgi_param  SCRIPT_FILENAME    $document_root/_ping.php;
  fastcgi_pass phpcgi;
  access_log off;
}

location @drupal {
  include conf.d/fastcgi_drupal.conf;
  {% if hhvm is not defined %}
    fastcgi_pass phpcgi;
  {% else %}
    fastcgi_pass unix:/var/run/hhvm/server.sock;
  {% endif %}
}

## Disallow access to patches directory.
location ^~ /patches { return 404; }

## Disallow access to drush backup directory.
location ^~ /backup { return 404; }

## Most sites won't have configured favicon
## and since its always grabbed, turn it off in access log
## and turn off it's not-found error in the error log
location = /favicon.ico { access_log off; log_not_found off; try_files /favicon.ico @empty; }

## Same for apple-touch-icon files
location = /apple-touch-icon.png { access_log off; log_not_found off; }
location = /apple-touch-icon-precomposed.png { access_log off; log_not_found off; }

## Return an in memory 1x1 transparent GIF.
location @empty {
    expires 30d;
    empty_gif;
}

## Rather than just denying .ht* in the config, why not deny
## access to all .invisible files
location ~ /\. { return 404; access_log off; log_not_found off; }

## Any other attempt to access PHP files returns a 404.
location ~* ^.+\.php$ {
    return 404;
}
