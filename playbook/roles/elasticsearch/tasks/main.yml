---
- name: Install JRE
  yum: pkg=jre state=installed

- name: Add Elasticsearch GPG key.
  rpm_key:
    key: http://packages.elasticsearch.org/GPG-KEY-elasticsearch
    state: present

- name: Add Elasticsearch repository.
  copy:
    src: elasticsearch.repo
    dest: /etc/yum.repos.d/elasticsearch.repo
    mode: 0644
  when: elasticsearch_version == 2

- name: Add Elasticsearch repository (for version >= 5).
  template:
    src: elasticsearch.repo.j2
    dest: /etc/yum.repos.d/elasticsearch.repo
    mode: 0644
  when: elasticsearch_version >= 5

- name: Install Elasticsearch.
  yum: pkg=elasticsearch state=installed

- name: Removing Plugins if they exist
  action: >
    shell bin/elasticsearch-plugin remove {{ item.shortname }}
    chdir={{ elasticsearch_config.home_dir }}
  with_items: "{{ elasticsearch_plugins }}"
  when: elasticsearch_plugins != None
  ignore_errors: yes

- name: Installing Plugins
  action: >
    shell bin/elasticsearch-plugin install {{ item.name }}
    chdir={{ elasticsearch_config.home_dir }}
  with_items: "{{ elasticsearch_plugins }}"
  when: elasticsearch_plugins != None
  ignore_errors: yes

- name: Configure Elasticsearch.
  lineinfile: >
    dest=/etc/elasticsearch/elasticsearch.yml
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { regexp: 'network\.host', line: 'network.host: 0.0.0.0' }
    - { regexp: 'cluster\.name', line: 'cluster.name: {{ elasticsearch_config.cluster_name }}' }
    - { regexp: 'node\.name', line: 'node.name: {{ elasticsearch_config.node_name }}' }
  notify: restart elasticsearch
  when: elasticsearch_cluster == False

- name: Configure Elasticsearch.
  lineinfile: >
    dest=/etc/sysconfig/elasticsearch
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { regexp: 'ES_HEAP_SIZE', line: 'ES_HEAP_SIZE: {{ elasticsearch_heap_size }}' }
  notify: restart elasticsearch
  when: elasticsearch_version == 2

- set_fact:
    host_id: "{{ ansible_default_ipv4.address.split('.')[3] }}"
  when: elasticsearch_cluster == True

- name: Configure Elasticsearch cluster.
  lineinfile: >
    dest=/etc/elasticsearch/elasticsearch.yml
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { regexp: 'network\.host', line: 'network.host: {{ ansible_default_ipv4.address }}' }
    - { regexp: 'cluster\.name', line: 'cluster.name: {{ elasticsearch_config.cluster_name }}' }
    - { regexp: 'node\.name', line: 'node.name: {{ elasticsearch_config.node_name }}-{{ host_id }}' }
    - { regexp: 'node\.master', line: 'node.master: true' }
    - { regexp: 'discovery\.zen\.minimum_master_nodes:', line: 'discovery.zen.minimum_master_nodes: 2' }
    - { regexp: 'discovery\.zen\.ping\.unicast\.hosts:', line: 'discovery.zen.ping.unicast.hosts: {{ elasticsearch_config.hosts }}' }

  notify: restart elasticsearch
  when: elasticsearch_cluster == True

- name: Configure Elasticsearch heap.
  lineinfile: >
    dest=/etc/elasticsearch/jvm.options
    regexp="{{ item.regexp }}"
    line="{{ item.line }}"
    state=present
  with_items:
    - { regexp: '^-Xms', line: '-Xms{{ elasticsearch_heap_size }}' }
    - { regexp: '^-Xmx', line: '-Xmx{{ elasticsearch_heap_size }}' }
  notify: restart elasticsearch
  when: elasticsearch_version >= 5

- name: Start Elasticsearch.
  service: name=elasticsearch state=started enabled=yes
