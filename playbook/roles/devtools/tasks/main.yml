---

- include: yum.yml

- yum:
    name={{ item }}
    state=present
  with_items:
    - blackfire-agent
    - blackfire-php
  when: enable_blackfire== true

# Add blackfire keys straight to the file (the config --register did not work).
- replace:
    dest=/etc/blackfire/agent
    regexp='server-id=.*$'
    replace='server-id={{ blackfire_server_key }}'
    backup=yes
  notify:
    restart blackfire-agent
  when: enable_blackfire== true

- replace:
    dest=/etc/blackfire/agent
    regexp='server-token=.*$'
    replace='server-token={{ blackfire_server_token }}'
    backup=yes
  notify:
    restart blackfire-agent
  when: enable_blackfire== true

- template:
    src=blackfire.ini.j2
    dest=/root/.blackfire.ini
    owner=root
    mode=0600
  notify:
    restart blackfire-agent
  when: enable_blackfire== true

##
# Php XDebug.
#

- name: PHP | Install XDebug for PHP 7.3
  yum: pkg=php73-php-pecl-xdebug state=installed
  when: enable_xdebug == true and php_package == "php73remi"

- name: PHP | Install XDebug for PHP <7.3
  yum: pkg={{ php_package }}-pecl-xdebug state=installed
  when: enable_xdebug == true and php_package != "php73remi"

- name: PHP | Set up xdebug.ini
  ini_file: dest=/etc/php.d/zzz-xdebug.ini
    section={{ item.0.section }}
    option={{ item.1.key }}
    value={{ item.1.val }}
    state=present
    create=yes
  with_subelements:
    - "{{ xdebug }}"
    - options
  notify:
    - restart php-fpm
  when: enable_xdebug== true

- name: PHP | Set the remote log option in the xdebug ini file.
  ini_file: dest=/etc/php.d/zzz-xdebug.ini
    section={{ item.0.section }}
    option=xdebug.remote_log
    value=/var/log/xdebug.log
  with_subelements:
    - "{{ xdebug }}"
    - options
  notify:
    - restart php-fpm
  when: xdebug_remote_debug_log == true

- name: PHP | Make sure the xdebug remote log file exists and it writeable
  file: path=/var/log/xdebug.log state=touch mode="660"
  when: xdebug_remote_debug_log == true

- name: Install node.js and npm
  yum:
    name={{ item }}
    state=present
  with_items:
    - nodejs
    - npm
  when: enable_nodejs== true

- name: Install nvm
  become: true
  become_user: "{{ nodejs_user }}"
  shell: >
    curl https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | sh
    creates=/home/{{ nodejs_user }}/.nvm/nvm.sh
  when: enable_nodejs== true

- name: Install node and set version
  become: true
  become_user: "{{ nodejs_user }}"
  shell: >
    /bin/bash -c "source ~/.nvm/nvm.sh && nvm install {{ nodejs_version }} && nvm alias default {{ nodejs_version }}"
    creates=/home/{{ nodejs_user }}/.nvm/alias
  when: enable_nodejs== true


